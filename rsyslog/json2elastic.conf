#load needed modules
module(load="mmjsonparse") #for parsing CEE-enhanced syslog messages
module(load="omelasticsearch") #for indexing to Elasticsearch

#try to parse a structured log
#action(type="mmjsonparse")
*.* :mmjsonparse:

#define a template to print all fields of the message
template(name="messageToES" type="list") {
    property(name="$!all-json")
}

template(name="logstash-index" type="list") {
    constant(value="logstash-") property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
    constant(value=".") property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
    constant(value=".") property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}

template(name="customTemplate" type="list") {
   constant(value="{\"@timestamp\":\"") property(name="timereported" dateFormat="rfc3339")
   constant(value="\",\"syslogtag\":\"") property(name="syslogtag" format="json")
   constant(value="\",") property(name="$!all-json" position.from="2")
}
# write the JSON message to the local ES node
if $parsesuccess == "OK" then action(
type="omelasticsearch"
    template="customTemplate"
    searchIndex="logstash-index"
    dynSearchIndex="on")
# if not json, then send to localhost logstash listener for grok magic
else action(
    type="omfwd" target="127.0.0.1" port="10514" protocol="tcp"
)


